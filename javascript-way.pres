






##

  888888                             .d8888b.                   d8b          888    
    "88b                            d88P  Y88b                  Y8P          888    
     888                            Y88b.                                    888    
     888  8888b.  888  888  8888b.   "Y888b.    .d8888b 888d888 888 88888b.  888888 
     888     "88b 888  888     "88b     "Y88b. d88P"    888P"   888 888 "88b 888    
     888 .d888888 Y88  88P .d888888       "888 888      888     888 888  888 888    
     88P 888  888  Y8bd8P  888  888 Y88b  d88P Y88b.    888     888 888 d88P Y88b.  
     888 "Y888888   Y88P   "Y888888  "Y8888P"   "Y8888P 888     888 88888P"   "Y888 
   .d88P                                                            888             
 .d88P"        888  888  888  8888b.  888  888                      888             
888P"          888  888  888     "88b 888  888                      888             
               888  888  888 .d888888 888  888 
               Y88b 888 d88P 888  888 Y88b 888                       
                "Y8888888P"  "Y888888  "Y88888                       
                                           888                       
                                      Y8b d88P 
                                       "Y88P"                                    ##














## Module pattern ##

- Basic way of scope encapsulation
``` js
var calculator = (function() {
  'use strict';

  return {
    sum: sum
  };

  function sum (a,b) {
    return a + b;
  }
}());

```
















## CommonJS and AMD ##

-                 AMD                                   VS               CommonJS
- Manages dependencies asyncronously                       - Gathers files into bundle under the hood
- Restricts using 'define' wrapper                         - Provides 'require' as a dependency provider
- // calculator.js                                         // calculator.js
  define('calculator', function() {                        module.exports = {
    return {                                                 sum: function(a, b) { return a + b; }
      sum: function(a, b) { return a + b; }                };
    };                                                     
  });                                                      
                                                         
- // app.js                                                // app.js  
  define('app', ["calculator"], function(calculator) {     var calculator = require('./calculator');
    console.log(calculator.sum(1, 2)); // => 3             assert.equal(3, calculator.sum(1, 2));
  });       

In reality, AMD can save some traffic by not requiring unused dependencies,
but constant HTTP requests to server, make it even more expensive than just
load the whole bundle at once.






## ES6 way ##

Nice and simple:

- // calculator.js
  export default function sum(a, b) { return a + b; }

- // app.js
  import calculator from 'calculator';

  console.log(calculator.sum(1, 2));














## Building tools ##

No native support so far. So you need ones:

  - Browserify 
  - Webpack
  - jspm
  - Framework built-ins (e.g. AngularJS)

To get launched by a task runner such as

  - Gulp
  - Grunt
  - NPM script
  - Rake, etc.










## 3rd party libraries ##

##
888b    888 8888888b.  888b     d888 
8888b   888 888   Y88b 8888b   d8888 
88888b  888 888    888 88888b.d88888 
888Y88b 888 888   d88P 888Y88888P888 
888 Y88b888 8888888P"  888 Y888P 888 
888  Y88888 888        888  Y8P  888 
888   Y8888 888        888   "   888 
888    Y888 888        888       888 ##
                                     
Just use it.


## Bower ##
Just use NPM.

> break-it-down ###